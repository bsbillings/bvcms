// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Touchpoint.Cms.Integrations.ESpace.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class MobileWorkOrderCreate
    {
        /// <summary>
        /// Initializes a new instance of the MobileWorkOrderCreate class.
        /// </summary>
        public MobileWorkOrderCreate() { }

        /// <summary>
        /// Initializes a new instance of the MobileWorkOrderCreate class.
        /// </summary>
        public MobileWorkOrderCreate(long? locationId = default(long?), string schedulableItems = default(string), long? serviceCategoryId = default(long?), long? workOrderPriorityId = default(long?), string description = default(string), DateTime? eta = default(DateTime?), bool? hasLocationTree = default(bool?), string parentLocationLabel = default(string), IList<MobileUserDefinedField> udfs = default(IList<MobileUserDefinedField>), IList<SelectListItem> serviceCategories = default(IList<SelectListItem>), IList<SelectListItem> priorities = default(IList<SelectListItem>), IList<LocationTreeDto> locations = default(IList<LocationTreeDto>), bool? requireSpaceOnWoCreate = default(bool?), bool? displaySpacesOnWoCreate = default(bool?), bool? requireSpace = default(bool?), MobileWoAddAttachment attachment = default(MobileWoAddAttachment), ServiceCategoryFormsApi serviceCategoryForms = default(ServiceCategoryFormsApi), bool? isSuccessStatusCode = default(bool?), string errorCode = default(string), string message = default(string))
        {
            LocationId = locationId;
            SchedulableItems = schedulableItems;
            ServiceCategoryId = serviceCategoryId;
            WorkOrderPriorityId = workOrderPriorityId;
            Description = description;
            Eta = eta;
            HasLocationTree = hasLocationTree;
            ParentLocationLabel = parentLocationLabel;
            Udfs = udfs;
            ServiceCategories = serviceCategories;
            Priorities = priorities;
            Locations = locations;
            RequireSpaceOnWoCreate = requireSpaceOnWoCreate;
            DisplaySpacesOnWoCreate = displaySpacesOnWoCreate;
            RequireSpace = requireSpace;
            Attachment = attachment;
            ServiceCategoryForms = serviceCategoryForms;
            IsSuccessStatusCode = isSuccessStatusCode;
            ErrorCode = errorCode;
            Message = message;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LocationId")]
        public long? LocationId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SchedulableItems")]
        public string SchedulableItems { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ServiceCategoryId")]
        public long? ServiceCategoryId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "WorkOrderPriorityId")]
        public long? WorkOrderPriorityId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Eta")]
        public DateTime? Eta { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "HasLocationTree")]
        public bool? HasLocationTree { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ParentLocationLabel")]
        public string ParentLocationLabel { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Udfs")]
        public IList<MobileUserDefinedField> Udfs { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ServiceCategories")]
        public IList<SelectListItem> ServiceCategories { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Priorities")]
        public IList<SelectListItem> Priorities { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Locations")]
        public IList<LocationTreeDto> Locations { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "RequireSpaceOnWoCreate")]
        public bool? RequireSpaceOnWoCreate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DisplaySpacesOnWoCreate")]
        public bool? DisplaySpacesOnWoCreate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "RequireSpace")]
        public bool? RequireSpace { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Attachment")]
        public MobileWoAddAttachment Attachment { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ServiceCategoryForms")]
        public ServiceCategoryFormsApi ServiceCategoryForms { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsSuccessStatusCode")]
        public bool? IsSuccessStatusCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ErrorCode")]
        public string ErrorCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Message")]
        public string Message { get; set; }

    }
}
