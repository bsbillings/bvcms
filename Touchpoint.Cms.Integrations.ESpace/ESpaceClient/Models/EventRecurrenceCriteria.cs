// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Touchpoint.Cms.Integrations.ESpace.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class EventRecurrenceCriteria
    {
        /// <summary>
        /// Initializes a new instance of the EventRecurrenceCriteria class.
        /// </summary>
        public EventRecurrenceCriteria() { }

        /// <summary>
        /// Initializes a new instance of the EventRecurrenceCriteria class.
        /// </summary>
        public EventRecurrenceCriteria(int? recurrenceType = default(int?), int? unit = default(int?), bool? isEveryWeekday = default(bool?), IList<int?> weekDays = default(IList<int?>), int? day = default(int?), int? month = default(int?), int? weekOfMonth = default(int?), int? dayOfWeek = default(int?), int? endAfterOccurrences = default(int?), DateTime? endByDate = default(DateTime?), DateTime? firstOccurrenceDate = default(DateTime?), IList<DateTime?> recurrenceMultiDates = default(IList<DateTime?>), IList<DateTime?> oldRecurrenceMultiDates = default(IList<DateTime?>))
        {
            RecurrenceType = recurrenceType;
            Unit = unit;
            IsEveryWeekday = isEveryWeekday;
            WeekDays = weekDays;
            Day = day;
            Month = month;
            WeekOfMonth = weekOfMonth;
            DayOfWeek = dayOfWeek;
            EndAfterOccurrences = endAfterOccurrences;
            EndByDate = endByDate;
            FirstOccurrenceDate = firstOccurrenceDate;
            RecurrenceMultiDates = recurrenceMultiDates;
            OldRecurrenceMultiDates = oldRecurrenceMultiDates;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "RecurrenceType")]
        public int? RecurrenceType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Unit")]
        public int? Unit { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsEveryWeekday")]
        public bool? IsEveryWeekday { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "WeekDays")]
        public IList<int?> WeekDays { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Day")]
        public int? Day { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Month")]
        public int? Month { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "WeekOfMonth")]
        public int? WeekOfMonth { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DayOfWeek")]
        public int? DayOfWeek { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "EndAfterOccurrences")]
        public int? EndAfterOccurrences { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "EndByDate")]
        public DateTime? EndByDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FirstOccurrenceDate")]
        public DateTime? FirstOccurrenceDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "RecurrenceMultiDates")]
        public IList<DateTime?> RecurrenceMultiDates { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OldRecurrenceMultiDates")]
        public IList<DateTime?> OldRecurrenceMultiDates { get; set; }

    }
}
