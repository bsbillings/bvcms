// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace ESpace.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class ItemSetupApiModel
    {
        /// <summary>
        /// Initializes a new instance of the ItemSetupApiModel class.
        /// </summary>
        public ItemSetupApiModel() { }

        /// <summary>
        /// Initializes a new instance of the ItemSetupApiModel class.
        /// </summary>
        public ItemSetupApiModel(long? scheduledItemId = default(long?), long? scheduableItemId = default(long?), long? eventId = default(long?), long? scheduleId = default(long?), string note = default(string), long? configurationId = default(long?), long? parentId = default(long?), string itemName = default(string), bool? fromOccurrence = default(bool?), long? occurrenceId = default(long?), int? itemType = default(int?), bool? isEditable = default(bool?), bool? occurrenceOnly = default(bool?), bool? updateItemOnOtherSchedules = default(bool?), bool? doesItemExistOnOtherSchedules = default(bool?), IList<ItemConfigurationApiModel> configurations = default(IList<ItemConfigurationApiModel>), IList<SelectListItem> spaces = default(IList<SelectListItem>), string configurationName = default(string), string configurationThumbnail = default(string), IList<long?> parentSpaceIds = default(IList<long?>), IList<VmAllocatedQuantityInSpace> allocatedQuantities = default(IList<VmAllocatedQuantityInSpace>))
        {
            ScheduledItemId = scheduledItemId;
            ScheduableItemId = scheduableItemId;
            EventId = eventId;
            ScheduleId = scheduleId;
            Note = note;
            ConfigurationId = configurationId;
            ParentId = parentId;
            ItemName = itemName;
            FromOccurrence = fromOccurrence;
            OccurrenceId = occurrenceId;
            ItemType = itemType;
            IsEditable = isEditable;
            OccurrenceOnly = occurrenceOnly;
            UpdateItemOnOtherSchedules = updateItemOnOtherSchedules;
            DoesItemExistOnOtherSchedules = doesItemExistOnOtherSchedules;
            Configurations = configurations;
            Spaces = spaces;
            ConfigurationName = configurationName;
            ConfigurationThumbnail = configurationThumbnail;
            ParentSpaceIds = parentSpaceIds;
            AllocatedQuantities = allocatedQuantities;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ScheduledItemId")]
        public long? ScheduledItemId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ScheduableItemId")]
        public long? ScheduableItemId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "EventId")]
        public long? EventId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ScheduleId")]
        public long? ScheduleId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Note")]
        public string Note { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ConfigurationId")]
        public long? ConfigurationId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ParentId")]
        public long? ParentId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ItemName")]
        public string ItemName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FromOccurrence")]
        public bool? FromOccurrence { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OccurrenceId")]
        public long? OccurrenceId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ItemType")]
        public int? ItemType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsEditable")]
        public bool? IsEditable { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OccurrenceOnly")]
        public bool? OccurrenceOnly { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "UpdateItemOnOtherSchedules")]
        public bool? UpdateItemOnOtherSchedules { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DoesItemExistOnOtherSchedules")]
        public bool? DoesItemExistOnOtherSchedules { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Configurations")]
        public IList<ItemConfigurationApiModel> Configurations { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Spaces")]
        public IList<SelectListItem> Spaces { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ConfigurationName")]
        public string ConfigurationName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ConfigurationThumbnail")]
        public string ConfigurationThumbnail { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ParentSpaceIds")]
        public IList<long?> ParentSpaceIds { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AllocatedQuantities")]
        public IList<VmAllocatedQuantityInSpace> AllocatedQuantities { get; set; }

    }
}
