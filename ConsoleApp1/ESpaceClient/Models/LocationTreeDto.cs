// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace ESpace.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class LocationTreeDto
    {
        /// <summary>
        /// Initializes a new instance of the LocationTreeDto class.
        /// </summary>
        public LocationTreeDto() { }

        /// <summary>
        /// Initializes a new instance of the LocationTreeDto class.
        /// </summary>
        public LocationTreeDto(long? id = default(long?), long? parentId = default(long?), string name = default(string), LocationTreeDto parent = default(LocationTreeDto), IList<LocationTreeDto> children = default(IList<LocationTreeDto>), bool? isParent = default(bool?), bool? haveChildren = default(bool?))
        {
            Id = id;
            ParentId = parentId;
            Name = name;
            Parent = parent;
            Children = children;
            IsParent = isParent;
            HaveChildren = haveChildren;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public long? Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ParentId")]
        public long? ParentId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Parent")]
        public LocationTreeDto Parent { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Children")]
        public IList<LocationTreeDto> Children { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsParent")]
        public bool? IsParent { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "HaveChildren")]
        public bool? HaveChildren { get; set; }

    }
}
